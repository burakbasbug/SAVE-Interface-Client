version: '3.7'

services:
  save-client:
    build: .
    image: save-client:1.0.0
    networks:
      - save_network
    ports: # like publish (docker cli) mapping for localhost-container
      - '3000:3000'
    expose: # ports visible only between containers on network
      - '1883'
      - '9200'
    depends_on:
      - mosquitto
    volumes:
      - type: bind
        source: ./src/dataschema
        target: /SAVE-Interface-Client/src/dataschema
      - type: bind
        source: ./config.js
        target: /SAVE-Interface-Client/config.js

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.8.1
    expose:
      - '9200'
    networks:
      - save_network
    environment:
      - 'ES_JAVA_OPTS=-Xmx256m -Xms256m' #- "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - node.ingest=false
      - xpack.security.enabled=false
      - xpack.sql.enabled=false
      - xpack.ml.enabled=false
      - xpack.watcher.enabled=false
      #- bootstrap.memory_lock=true ??
      #- discovery.type=single-node ??

  kibana:
    image: docker.elastic.co/kibana/kibana:6.8.1
    networks:
      - save_network
    ports:
      - '5601:5601'
    environment:
      - xpack.ml.enabled=false
      - xpack.reporting.enabled=false
      - xpack.searchprofiler.enabled=false
      - xpack.grokdebugger.enabled=false

  mosquitto:
    image: eclipse-mosquitto
    networks:
      - save_network
    ports:
      - '8883:1883' # HOST:CONTAINER

networks:
  save_network:
# build after changes!
# important: start with "up", stop with "down". Because:
# docker-compose down: Stops containers and removes containers, networks, volumes, and images created by up.
# https://docs.docker.com/compose/reference/down/

# logs: logs [options] [SERVICE...]
# https://docs.docker.com/compose/reference/logs/
# containers should be started as daemon: docker-compose up -d
# dump all logs of a container: docker-compose logs acona-app
# dump last 100 lines: docker-compose logs --tail=100 acona-app
# select a container and follow logs: docker-compose logs -f acona-app

###############################################################
##################### VOLUME DENEYLERI
# 0. T端m volume'lari sildim
# 1. docker-compose up yapinca 4 tane (unnamed) volume yaratildi.
# 2. docker-compose down sonucunda bular SILINMEDI
# 3. Yeni bir docker-compose up yapinca bu sefer 4 yerine 2 yeni volume yaratildi
# 4. yeni yaratilanlar muhtelemen node-app ve mosquitto'ya aittir c端nk端 ES ve Kibana
# verileri bi sekilde persist ediliyor.
# 5. bundan sonraki her docker-compose down + docker-compose up yaptigimda extradan 2 yeni volume
# yaratiliyor. Yani 2 volume hep kullanimda, 2 volume ise hep yeniden yaratiliyor.
# 6. docker-compose down -v yapinca ise 2 volume siliyor, 2si kaliyor.
# 7. muhtemelen bu persist olan 2 volume es ve kibanaya aittir.
# 8. s端rekli yeni olarak yaratilan volume'lari Compose down yapinca silmek icin: `docker-compose down -v`
# 8.1 "-v" : Remove named volumes declared in the volumes section of the Compose file and anonymous volumes attached to containers.
###############################################################
